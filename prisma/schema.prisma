// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model User {
  id           String     @id(map: "primary") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt    DateTime?  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt    DateTime?  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  username     String     @unique
  passwordHash String     @map("password_hash")
  cartItems    CartItem[]

  @@map("users")
}

model Product {
  id          String     @id(map: "primary") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt   DateTime?  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt   DateTime?  @default(now()) @updatedAt @map("updated_at") @db.Timestamptz(6)
  name        String
  description String
  price       Decimal
  units       Int        @default(0) @db.Int4
  imgUrl      String     @map("img_url")
  CartItem    CartItem[]

  @@map("products")
}

model CartItem {
  id        String  @id(map: "primary") @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  productId String  @map("product_id") @db.Uuid
  userId    String  @map("user_id") @db.Uuid
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_product_id_ref_products")
  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_user_id_ref_users")

  @@map("cart_items")
}
